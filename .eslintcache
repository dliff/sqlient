[{"/Users/dliff/work/sqlient/src/App.js":"1","/Users/dliff/work/sqlient/src/index.js":"2","/Users/dliff/work/sqlient/src/state/store.js":"3","/Users/dliff/work/sqlient/src/state/reducers.js":"4","/Users/dliff/work/sqlient/src/ConnectView.js":"5","/Users/dliff/work/sqlient/src/state/actions.js":"6","/Users/dliff/work/sqlient/src/api.js":"7","/Users/dliff/work/sqlient/src/QueryView.js":"8","/Users/dliff/work/sqlient/src/sql.js":"9"},{"size":609,"mtime":1611266657910,"results":"10","hashOfConfig":"11"},{"size":349,"mtime":1611262586100,"results":"12","hashOfConfig":"11"},{"size":223,"mtime":1611263370986,"results":"13","hashOfConfig":"11"},{"size":444,"mtime":1611267833705,"results":"14","hashOfConfig":"11"},{"size":2858,"mtime":1611268814897,"results":"15","hashOfConfig":"11"},{"size":1190,"mtime":1611268025172,"results":"16","hashOfConfig":"11"},{"size":470,"mtime":1611267657560,"results":"17","hashOfConfig":"11"},{"size":615,"mtime":1611268593462,"results":"18","hashOfConfig":"11"},{"size":140,"mtime":1611268153678,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ddh2xz",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dliff/work/sqlient/src/App.js",[],["41","42"],"/Users/dliff/work/sqlient/src/index.js",[],"/Users/dliff/work/sqlient/src/state/store.js",[],"/Users/dliff/work/sqlient/src/state/reducers.js",[],"/Users/dliff/work/sqlient/src/ConnectView.js",["43","44","45"],"\nimport React, { useState } from \"react\";\nimport { jsx, css, Global, ClassNames } from '@emotion/react'\nimport {useDispatch} from 'react-redux'\nimport { attemptConnect } from \"./state/actions.js\"\n\nconst mainStyle =\ncss`\n        padding: 32px;\n        background-color: #cb4c11;\n        font-size: 24px;\n        border-radius: 25px;\n        width:400px;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        `;\nconst inputGroupStyle = css`\np {\n  font-size:10px;\n  margin-bottom:0;\n}\ninput {\nmargin-top:0;\nborder-radius:20px;\nborder:0;\nheight:25px;\nwidth:100%;\npadding-left:10px;\n}\n`;\nconst connectButtonStyle = css`\nborder-radius:20px;\nborder:0;\nheight:25px;\nmargin: 0 auto;\ndisplay:block;\nmargin-top:25px;\n`;\nconst ConnectView = (props) => {\n    // const [username, setUsername] = useState(\"\");\n    // const [host, setHost] = useState(\"\");\n    // const [database, setDatabase] = useState(\"\");\n    // const [password, setPassword] = useState(\"\");\n    // const [port, setPort] = useState(\"5432\");\n    const dispatch = useDispatch()\n\n    const [username, setUsername] = useState(\"postgres\");\n    const [host, setHost] = useState(\"127.0.0.1\");\n    const [database, setDatabase] = useState(\"hs\");\n    const [password, setPassword] = useState(\"\");\n    const [port, setPort] = useState(\"5432\");\n    const connect = () => {\n        dispatch(attemptConnect({\n            username: username,\n            host: host,\n            database: database,\n            password:password,\n            port:port\n        }));\n    }\n    return (\n        // These inputs could be DRY-er, but on a real app this structure would\n        // diverge pretty quickly.\n        <div className={mainStyle}>\n            <h3>SQLIENT</h3>\n            <div css={inputGroupStyle}>\n                <p>Host</p>\n                <input type=\"text\" value={host} onChange={e => setHost(e.target.value)}/>\n            </div>\n            <div className={inputGroupStyle}>\n                <p>Database Name</p>\n                <input type=\"text\"  value={database} onChange={e => setDatabase(e.target.value)}/>\n            </div>\n            <div className={inputGroupStyle}>\n                <p>Port</p>\n                <input type=\"text\"  value={port} onChange={e => setPort(e.target.value)}/>\n            </div>\n            <div className={inputGroupStyle}>\n                <p>Username</p>\n                <input type=\"text\"  value={username} onChange={e => setUsername(e.target.value)}/>\n            </div>\n            <div className={inputGroupStyle}>\n                <p>Password</p>\n                <input type=\"password\"  value={password} onChange={e => setPassword(e.target.value)}/>\n            </div>\n\n            <button className={connectButtonStyle} onClick={connect}>Connect</button>\n        </div>\n    )\n}\nexport default ConnectView","/Users/dliff/work/sqlient/src/state/actions.js",[],"/Users/dliff/work/sqlient/src/api.js",[],"/Users/dliff/work/sqlient/src/QueryView.js",["46","47","48","49","50","51"],"import React, { useState } from \"react\";\n\nimport { jsx, css, Global, ClassNames } from '@emotion/react'\n\nimport {connect, useSelector} from 'react-redux'\nimport { attemptConnect } from \"./state/actions.js\"\nconst leftPaneStyle = css`\nwidth:200px;\nfloat:left;\nheight:100px;\nborder:2px solid black;\n`;\n\nconst QueryView = (props) => {\n    const tables = useSelector(state => state.tables)\n    return (\n        <>\n            <Global\n      styles={css`\n        html,body {\n          height:100%;\n        }\n      `}\n    />\n            <div className={leftPaneStyle}>Hello</div>\n    </>\n\n    );\n}\n\nexport default QueryView","/Users/dliff/work/sqlient/src/sql.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":13},{"ruleId":"56","severity":1,"message":"60","line":3,"column":20,"nodeType":"58","messageId":"59","endLine":3,"endColumn":26},{"ruleId":"56","severity":1,"message":"61","line":3,"column":28,"nodeType":"58","messageId":"59","endLine":3,"endColumn":38},{"ruleId":"56","severity":1,"message":"62","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"57","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":13},{"ruleId":"56","severity":1,"message":"61","line":3,"column":28,"nodeType":"58","messageId":"59","endLine":3,"endColumn":38},{"ruleId":"56","severity":1,"message":"63","line":5,"column":9,"nodeType":"58","messageId":"59","endLine":5,"endColumn":16},{"ruleId":"56","severity":1,"message":"64","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":24},{"ruleId":"56","severity":1,"message":"65","line":15,"column":11,"nodeType":"58","messageId":"59","endLine":15,"endColumn":17},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'jsx' is defined but never used.","Identifier","unusedVar","'Global' is defined but never used.","'ClassNames' is defined but never used.","'useState' is defined but never used.","'connect' is defined but never used.","'attemptConnect' is defined but never used.","'tables' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]